{"version":3,"sources":["api/goods.ts","GoodsList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","ok","headers","get","includes","json","Promise","reject","GoodsList","goods","map","good","style","color","name","id","App","useState","setGoods","isEmpty","length","areRed","every","handleLoadAllGoods","a","loadedGoods","handlerFirstFive","sort","b","localeCompare","slice","handlerRedGoods","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sOAKO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAa,IAAD,EAChB,OAAKA,EAASC,IAIV,UAACD,EAASE,QAAQC,IAAI,uBAAtB,OAAC,EAAsCC,SAAS,oBAI7CJ,EAASK,OAPPC,QAAQC,Y,MAWhB,I,OCbMC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCLLC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOR,EAAP,KAAcS,EAAd,KACMC,EAA2B,IAAjBV,EAAMW,OAChBC,EAASZ,EAAMa,OAAM,SAACX,GAAD,MAAyB,QAAfA,EAAKE,SAEpCU,EAAkB,uCAAG,4BAAAC,EAAA,sEACC3B,IADD,cACnB4B,EADmB,yBAGjBN,GAA4B,IAAjBV,EAAMW,OAErBF,EAASO,GAGTP,EAAS,KARY,2CAAH,qDAYlBQ,EAAgB,uCAAG,4BAAAF,EAAA,sEFFlB3B,IACJE,MAAK,SAAAU,GAGJ,OAFoBA,EAAMkB,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAEV,KAAKe,cAAcD,EAAEd,SAE7CgB,MAAM,EAAG,MEFP,OACjBL,EADiB,OAGnBN,GAAWV,EAAMW,OAAS,EAC5BF,EAASO,GACiB,IAAjBhB,EAAMW,SACVC,GACHH,EAAS,IAGXA,EAASO,IAVY,2CAAH,qDAchBM,EAAe,uCAAG,4BAAAP,EAAA,sEFPjB3B,IACJE,MAAK,SAAAU,GACJ,OAAOA,EAAMuB,QAAO,SAACrB,GAAD,MAAyB,QAAfA,EAAKE,YEKf,cAChBY,EADgB,yBAKlBP,EAFIC,IAAYE,EAEPI,EAGA,KARS,2CAAH,qDAYrB,OACE,sBAAKQ,UAAU,MAAf,UACE,uDACA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASZ,EAHX,4BAOA,wBACEW,KAAK,SACL,UAAQ,oBACRC,QAAST,EAHX,gCAQA,wBACEQ,KAAK,SACL,UAAQ,aACRC,QAASJ,EAHX,4BAQA,cAAC,EAAD,CAAWtB,MAAOA,QCxExB2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.69291f8f.chunk.js","sourcesContent":["import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject();\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        return Promise.reject();\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      const sortedGoods = goods.sort((a, b) => a.name.localeCompare(b.name));\n\n      return sortedGoods.slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter((good) => good.color === 'red');\n    });\n};\n","import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport { get5First, getAll, getRedGoods } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const isEmpty = goods.length === 0;\n  const areRed = goods.every((good) => good.color === 'red');\n\n  const handleLoadAllGoods = async () => {\n    const loadedGoods = await getAll();\n\n    return (isEmpty || goods.length === 5)\n      ? (\n        setGoods(loadedGoods)\n      )\n      : (\n        setGoods([])\n      );\n  };\n\n  const handlerFirstFive = async () => {\n    const loadedGoods = await get5First();\n\n    if (isEmpty || goods.length > 5) {\n      setGoods(loadedGoods);\n    } else if (goods.length === 5) {\n      if (!areRed) {\n        setGoods([]);\n      }\n\n      setGoods(loadedGoods);\n    }\n  };\n\n  const handlerRedGoods = async () => {\n    const loadedGoods = await getRedGoods();\n\n    return (isEmpty || !areRed)\n      ? (\n        setGoods(loadedGoods)\n      )\n      : (\n        setGoods([])\n      );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleLoadAllGoods}\n      >\n        Load all goods\n      </button>\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handlerFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handlerRedGoods}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}